---
import type { NavigationItem } from '@data/navigation';
import '@styles/global.css'

export interface Props {
 navigationItems: NavigationItem[]
}

const { navigationItems } = Astro.props;
---

<nav>
  <ul class="menu">
    {
      navigationItems.map(navigationItem => (
        <li class="menu-item">
          <div class="menu-item-header">            
            {
              navigationItem.subMenuLinks &&
              <input type="checkbox" />
              <i></i>
            }
            {
              navigationItem.path ? 
              <a 
                href={navigationItem.path} 
                class={!navigationItem.subMenuLinks ? "fill-header" : "wrap-content"}
              >{navigationItem.text}</a> :
              <div>{navigationItem.text}</div>
            }
          </div>

          {
            navigationItem.subMenuLinks && navigationItem.subMenuLinks.length > 0 &&
            <ul class="sub-menu">
              {
                navigationItem.subMenuLinks.map(subMenuItem => (
                  <li class="sub-menu-item">
                    <a href={subMenuItem.path} class="text-on-background">
                      {subMenuItem.text}
                    </a>                   
                  </li>
                ))
              }
            </ul>
          }
        </li>
      ))
    }
  </ul>
</nav>

<style>

  .menu {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .menu-item {
    position: relative;
    padding: 0;
    margin: 0;
  }

  .menu-item::after {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    height: 2px;
    width: 0;
    background: hsl(var(--color-primary));
    transition: all var(--transition-bezier);
  }

  .menu-item:hover::after,
  .menu-item:has(input[type=checkbox]:checked)::after {
    width: 100%;
  }

  .menu-item > a::after {
    content: "";
    position: absolute;
    left: 0;
    bottom: 0;
    height: 2px;
    width: 0;
    background: hsl(var(--color-primary));
    transition: all var(--transition-bezier);
  }

  .menu-item:hover > a::after {
    width: 100%;
  }
  
  .menu-item-header {
    background-color: hsl(var(--color-surface) / .2);
    border: solid hsl(var(--color-surface));
    border-width: 1px 0 0 0;
  }

  .menu-item:has(input[type=checkbox]:checked) > .menu-item-header,
  .menu-item:last-of-type > .menu-item-header {
    border-width: 1px 0;
  }

  .menu-item-header > *:last-child {
    font-size: var(--fs-lg);
    color: hsl(var(--color-on-background));
    margin: 1rem 0 1rem 1rem;
    display: inline-block;
    opacity: 1;
    z-index: 2;
  }

  /* .menu-item-header > a:active {
    box-shadow: inset 0 0 0px 1px hsl(var(--color-on-surface) / .75);
  }

  .menu-item-header > a::after {
    content: "";
    position: absolute;
    left: 0;
    bottom: 0;
    height: 2px;
    width: 0;
    background: hsl(var(--color-on-primary));
    transition: all var(--transition-bezier);
  }

  .menu-item-header > a:hover::after {
    width: 100%;
  } */

  .wrap-content {
    position: relative;
  }

  .fill-header {
    position: static;
  }

  .fill-header::after {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
  }

  .sub-menu {
    /* animation: flipdown 0.5s ease both; */
    list-style: none;
    padding: 0;
    position: relative;
    display: none;
    z-index: 2;
  }

  .menu-item:has(input[type=checkbox]:checked) > .sub-menu {
    display: block;
  }

  .sub-menu-item {
    padding: 1rem 1.25rem;
    display: block;
    position: relative;
  }

  .sub-menu-item:active {
    box-shadow: inset 0 0 0px 1px hsl(var(--color-on-surface) / .75);
  }

  .sub-menu-item > a {
    display: inline-block;
  }

  .sub-menu-item > a::after {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
  }

  .sub-menu-item > a::before {
    content: "";
    position: absolute;
    left: 1.25rem;
    bottom: 8px;
    height: 2px;
    width: 0;
    background: hsl(var(--color-primary));
    transition: all var(--transition-bezier);
  }

  .sub-menu-item:hover > a::before {
    width: calc(100% - 2.5rem);
  }

  .menu-item i:before, 
  .menu-item i:after {
    transition: all 0.25s ease-in-out;
  }

  .menu-item i {
    position: absolute;
    transform: translate(-6px, -50%);
    top: 1.5rem;
    right: 1.5rem;
  }

  .menu-item i:before, 
  .menu-item i:after {
    content: "";
    position: absolute;
    background-color: hsl(var(--color-primary));
    width: 2px;
    height: 8px;
  }

  .menu-item i:before {
    transform: translate(-2px, 0) rotate(45deg);
  }

  .menu-item i:after {
    transform: translate(2px, 0) rotate(-45deg);
  }

  .menu-item input[type=checkbox] {
    position: absolute;
    cursor: pointer;
    width: 100%;
    height: 100%;
    z-index: 1;
    opacity: 0;
  }

  .menu-item input[type=checkbox]:checked ~ i:before {
    transform: translate(2px, 0) rotate(45deg);
  }

  .menu-item input[type=checkbox]:checked ~ i:after {
    transform: translate(-2px, 0) rotate(-45deg);
  }

  @keyframes flipdown {
    0% {
      opacity: 0;
      transform-origin: top center;
      transform: rotateX(-90deg);
    }
    5% {
      opacity: 1;
    }
    80% {
      transform: rotateX(8deg);
    }
    83% {
      transform: rotateX(6deg);
    }
    92% {
      transform: rotateX(-3deg);
    }
    100% {
      transform-origin: top center;
      transform: rotateX(0deg);
    }
  }

</style>
