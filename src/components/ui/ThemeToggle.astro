---
import Icon from './Icon.astro';
import '../../styles/global.css';
---

<theme-toggle class="toggle">
	<button>
		<span class="screen-reader-only">Dark theme</span>
		<span class="icon light"><Icon icon="sun" /></span>
		<span class="icon dark"><Icon icon="moon-stars" /></span>
	</button>
</theme-toggle>

<style>
	button {
		display: flex;
		border: 0;
		border-radius: 999rem;
		padding: 0;
		background-color: hsl(var(--color-background));
		box-shadow: inset 0 0 0 1px hsl(var(--color-primary));
		cursor: pointer;
	}

  .toggle {
    width: 64px;
    height: 32px;
  }

	.icon {
		z-index: 1;
		position: relative;
		display: flex;
		padding: 0.5rem;
		width: 2rem;
		height: 2rem;
		font-size: 1rem;
	}

	.icon.light::before {
		content: '';
		z-index: -1;
		position: absolute;
		inset: 0;
		background-color: hsl(var(--color-primary));
		border-radius: 999rem;
	}

  .icon > svg {
    width: 1em;
    height: 1em;
    vertical-align: middle;
  }

	:global(.theme-dark) .icon.light::before {
		transform: translateX(100%);
	}

  .icon.light {
    color: hsl(var(--color-primary));
  }

  .icon.dark {
    color: hsl(var(--color-on-primary));
  }

  html:not(.theme-dark) .icon.dark {
		color: hsl(var(--color-primary));
	}

  html:not(.theme-dark) .icon.light {
		color: hsl(var(--color-on-primary));
	}

	@media (prefers-reduced-motion: no-preference) {
		.icon,
		.icon.light::before {
			transition:
				transform var(--theme-transition),
				color var(--theme-transition);
		}
	}

	@media (forced-colors: active) {
		.icon.light::before {
			background-color: SelectedItem;
		}
	}
</style>

<script>
	class ThemeToggle extends HTMLElement {
		constructor() {
			super();

			const button = this.querySelector('button')!;

			const setTheme = (dark: boolean) => {
				document.documentElement.classList[dark ? 'add' : 'remove']('theme-dark');
				button.setAttribute('aria-pressed', String(dark));
			};

			button.addEventListener('click', () => setTheme(!this.isDark()));

			setTheme(this.isDark());
		}

		isDark() {
			return document.documentElement.classList.contains('theme-dark');
		}
	}
	customElements.define('theme-toggle', ThemeToggle);
</script>
